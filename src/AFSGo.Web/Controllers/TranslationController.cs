// Generated by CodeGenerator and shorten by me

using AFSGo.Web.Data;
using AFSGo.Web.Dto;
using AFSGo.Web.Models;
using AFSGo.Web.Service.Translation;
using Microsoft.AspNetCore.Mvc;
using Microsoft.EntityFrameworkCore;

namespace AFSGo.Web.Controllers;

public class TranslationController(ApplicationDbContext context, TranslationFactory translationFactory)
    : Controller
{
    // GET: Translation
    public async Task<IActionResult> Index()
    {
        return View(await context.TranslationViewModel.ToListAsync());
    }

    // GET: Translation/Details/5
    public async Task<IActionResult> Details(int? id)
    {
        if (id == null)
        {
            return NotFound();
        }

        var translationViewModel = await context.TranslationViewModel
            .FirstOrDefaultAsync(m => m.Id == id);
        if (translationViewModel == null)
        {
            return NotFound();
        }

        return View(translationViewModel);
    }

    [HttpPost]
    public async Task<IActionResult> Translate(TranslationRequestModel model, CancellationToken cancellationToken)
    {
        var translator = translationFactory.GetStreamService(model.Translator);
        var translatedText = await translator.TranslateAsync(TranslationDto.FromModel(model), cancellationToken);
        if (translatedText == null)
        {
            return BadRequest("Translation failed");
        }

        return Json(translatedText.ToModel());
    }
}